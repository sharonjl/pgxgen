// Code generated by pgxgen. DO NOT EDIT.
package {{.PackageName}}

import (
	"github.com/graph-gophers/dataloader"
    "github.com/jackc/pgx"
    datastore "{{.ImportPath}}/datastore"
)

func ToDatastoreErr(fn string, err error) error {
	if err == nil {
		return nil
	}
    if err == pgx.ErrNoRows {
        return &datastore.Error{Err: err, Code: datastore.ErrCodeNotFound, Impl: "{{.PackageName}}", Function: fn}
    }
    if pge, ok := err.(pgx.PgError); ok && pge.Code == "23505" {
        return &datastore.Error{Err: err, Code: datastore.ErrCodeDuplicate, Impl: "{{.PackageName}}", Function: fn}
    }
    return &datastore.Error{Err: err, Code: datastore.ErrCodeUnknown, Impl: "{{.PackageName}}", Function: fn}
}

type generatedLoaders struct {
{{range .Queries -}}
    {{.Name}} *dataloader.Loader
{{end -}}
}

type PGDatastore struct {
	generatedLoaders
	conn datastore.PostgresConnection
}

func New(conn datastore.PostgresConnection) *PGDatastore {
    ld := generatedLoaders{
    {{range .Queries -}}
        {{.Name}}: dataloader.NewBatchedLoader(batchFunc{{.Name}}(conn)),
    {{end -}}
    }
    return &PGDatastore{generatedLoaders: ld, conn: conn}
}