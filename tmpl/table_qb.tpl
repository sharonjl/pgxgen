// Code generated by pgxgen. DO NOT EDIT.
package {{.PackageName}}

import (
    "time"
    "error"
	"strconv"
	"strings"
	"time"

    pgx "github.com/jackc/pgx"
    pgtype "github.com/jackc/pgx/pgtype"
    uuid "github.com/satori/go.uuid"
)

// tbl{{.Table.ExportedName}} represents row data from the table '{{.Table.Name}}'
type tbl{{.Table.ExportedName}} struct {
    *table
{{range .Table.Columns -}}
    {{.ExportedName}} *column   // column: '{{.Name}}'
{{end -}}
}

func ({{.Table.ShortName}} *tbl{{.Table.ExportedName}}) GetTable() *table {
    return {{.Table.ShortName}}.table
}

func ({{.Table.ShortName}} *tbl{{.Table.ExportedName}}) GetColumns() []*column {
    return []*column{
    {{range .Table.Columns -}}
        {{$.Table.ShortName}}.{{.ExportedName}},
    {{end -}}
    }
}

// {{$.Table.ExportedName}} exposes table '{{.Table.Name}}' to the query builder.
var {{$.Table.ExportedName}} = &tbl{{.Table.ExportedName}}{
     table: &table{
        name:   "{{.Table.Name}}",
        gotype: "{{.Table.GoType}}",
     },
     {{range .Table.Columns -}}
     {{.ExportedName}}: &column{    // column: '{{.Name}}'
        table:      "{{$.Table.Name}}",
        name:       "{{.Name}}",
        expName:    "{{.ExportedName}}",
        gotype:     "{{.GoType}}",
        pgtype:     "{{.DataType}}",
        pgxtype:    "{{.PgxType}}",
     },
     {{end -}}
}